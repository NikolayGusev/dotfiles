// Place your key bindings in this file to override the defaults
[
  // Edamagit -vim keybindings
  {
    "key": "g g",
    "command": "cursorTop",
    "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
  },
  {
    "key": "g r",
    "command": "magit.refresh",
    "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
  },
  {
    "key": "tab",
    "command": "extension.vim_tab",
    "when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert' && editorLangId != 'magit'"
  },
  {
    "key": "tab",
    "command": "-extension.vim_tab",
    "when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "x",
    "command": "magit.discard-at-point",
    "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
  },
  {
    "key": "k",
    "command": "-magit.discard-at-point"
  },
  {
    "key": "-",
    "command": "magit.reverse-at-point",
    "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
  },
  {
    "key": "v",
    "command": "-magit.reverse-at-point"
  },
  {
    "key": "shift+-",
    "command": "magit.reverting",
    "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
  },
  {
    "key": "shift+v",
    "command": "-magit.reverting"
  },
  {
    "key": "shift+o",
    "command": "magit.resetting",
    "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
  },
  {
    "key": "shift+x",
    "command": "-magit.resetting"
  },
  {
    "key": "x",
    "command": "-magit.reset-mixed"
  },
  {
    "key": "ctrl+u x",
    "command": "-magit.reset-hard"
  },
  {
    "key": "y",
    "command": "-magit.show-refs",
    "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress|Visual).*$/"
  },
  {
    "key": "i",
    "command": "-magit.ignoring",
    "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
  },
  // Neovim tab + magit compatibility
  {
    "key": "tab",
    "command": "-vscode-neovim.send",
    "args": "<Tab>"
  },
  {
    "key": "tab",
    "command": "vscode-neovim.send",
    "when": "editorTextFocus && neovim.init && neovim.mode != 'cmdline_normal' && neovim.mode != 'insert' && editorLangId != 'magit'",
    "args": "<Tab>"
  },
  // VSCode unbindings
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+m",
    "command": "-editor.action.toggleTabFocusMode"
  },
  // vim-move support for neovim
  {
    "key": "alt+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && neovim.mode != 'visual'"
  },
  {
    "key": "alt+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && neovim.mode != 'visual'"
  },
  {
    "key": "alt+j",
    "command": "vscode-neovim.send",
    "when": "editorTextFocus && neovim.mode == 'visual'",
    "args": "<A-j>"
  },
  {
    "key": "alt+k",
    "command": "vscode-neovim.send",
    "when": "editorTextFocus && neovim.mode == 'visual'",
    "args": "<A-k>"
  },
  {
    "key": "alt+h",
    "command": "vscode-neovim.send",
    "when": "editorTextFocus && neovim.mode == 'visual'",
    "args": "<A-h>"
  },
  {
    "key": "alt+l",
    "command": "vscode-neovim.send",
    "when": "editorTextFocus && neovim.mode == 'visual'",
    "args": "<A-l>"
  },
  
  // vspacecode-bonus move around windows
  {
    "key": "ctrl+h",
    "command": "workbench.action.navigateLeft",
    "when": "!inQuickOpen && !suggestWidgetVisible && !parameterHintsVisible && !isInDiffEditor"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.navigateDown",
    "when": "!inQuickOpen && !suggestWidgetVisible && !parameterHintsVisible"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.navigateUp",
    "when": "!inQuickOpen && !suggestWidgetVisible && !parameterHintsVisible"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.navigateRight",
    "when": "!inQuickOpen && !suggestWidgetVisible && !parameterHintsVisible && !isInDiffEditor"
  },
  // Quick Navigation for diff view
  {
    "key": "ctrl+h",
    "command": "workbench.action.compareEditor.focusSecondarySide",
    "when": "isInDiffEditor && !isInDiffLeftEditor"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.navigateLeft",
    "when": "isInDiffEditor && isInDiffLeftEditor"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.compareEditor.focusPrimarySide",
    "when": "isInDiffEditor && isInDiffLeftEditor"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.navigateRight",
    "when": "isInDiffEditor && !isInDiffLeftEditor"
  }
]